import pygame
import math
import numpy as np
pygame.init()
width = 75


def draw_board(screen, board):
    pygame.draw.rect(screen, (211, 211, 211), (0, 0, width * 8, width))
    for row in range(len(board[0])):
        for column in range(len(board[1])):
            if column != 0:
                pygame.draw.rect(screen, (192, 192, 192), (row*width, column*width, width, width))
                pygame.draw.circle(screen, (211, 211, 211), (row*width + width/2, column*width + width/2), 30)
                if board[row][column] == 1:
                    pygame.draw.circle(screen, (211, 0, 0), (row * width + width / 2, column * width + width / 2), 30)
                if board[row][column] == 2:
                    pygame.draw.circle(screen, (0, 0, 211), (row * width + width / 2, column * width + width / 2), 30)


def solve(board, pos, turn):
    if turn % 2 == 0:
        turn = 2
    else:
        turn = 1
    pos_x = math.floor(pos[0]/width)
    if board[pos_x][1] == 0:
        board[pos_x][1] = turn
    else:
        return board, False
    return board, True


def animate(board):
    for row in range(len(board[0])):
        for column in range(len(board[1])):
            if column < 7:
                if board[row][column] != 0 and board[row][column+1] == 0:
                    board[row][column+1] = board[row][column]
                    board[row][column] = 0
                    return


def draw_ball(screen, pos, turn):
    if turn % 2 != 0:
        pygame.draw.circle(screen, (211, 0, 0), (pos, width / 2), 30)
    else:
        pygame.draw.circle(screen, (0, 0, 211), (pos, width / 2), 30)


def check_win(board):
    for i in range(len(board[0]) - 3):
        for j in range(len(board[1])):
            if (board[i][j] == board[i+1][j] == board[i+2][j] == board[i+3][j]) and board[i][j] != 0:
                return True
    for i in range(len(board[0])):
        for j in range(len(board[1]) - 3):
            if (board[i][j] == board[i][j+1] == board[i][j+2] == board[i][j+3]) and board[i][j] != 0:
                return True
    for i in range(len(board[0]) - 3):
        for j in range(len(board[0]) - 3):
            if (board[j][i] == board[j+1][i+1] == board[j+2][i+2] == board[j+3][i+3]) and board[j][i] != 0:
                return True
    for i in range(len(board[0]) - 3):
        for j in range(3, len(board[1])):
            if (board[j][i] == board[j-1][i+1] == board[j-2][i+2] == board[j-3][i+3]) and board[j][i] != 0:
                return True


def main():
    win = pygame.display.set_mode((600, 600))
    pygame.display.set_caption("Connect Colours")
    myfont = pygame.font.SysFont("monospace", 45)
    board = np.zeros((8, 8))
    pos = None
    run = True
    turn = 1
    while run:
        pygame.time.wait(60)
        mouse_pos_x, _ = pygame.mouse.get_pos()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False
            if event.type == pygame.MOUSEBUTTONDOWN:
                pos = event.pos
        if pos is not None:
            board, valid = solve(board, pos, turn)
            pos = None
            if valid:
                turn += 1
        draw_board(win, board)
        if check_win(board):
            string = "Player " + str(turn % 2 + 1) + " win"
            label = myfont.render(string, False, (0, 0, 0))
            win.fill((192, 192, 192))
            win.blit(label, (120, 60))
        else:
            animate(board)
            draw_ball(win, mouse_pos_x, turn)
        pygame.display.update()


main()


